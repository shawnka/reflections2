How did viewing a diff between two versions of a file help you see the bug that
was introduced?

Highlighted the relevant lines for closer comparison.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

Allow you to see what changes were made and when. To compare previous versions when bugs are introduced.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

Pros: More control over when commits are saved for one logical change.
Cons: Manual process could be forgotten for long periods.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

It makes sense in coding use case that a single logical change is likely to affect multiple files and the changes are related to each other. Whereas in most other applications the documents are more independent. 

How can you use the commands git log and git diff to view the history of files?

Git log shows the list of all commits made and who made the commit, date&time, description
Git diff allows you to compare the difference between two commits what was removed and added.

How might using version control make you more confident to make changes that
could break something?

Quickly and easily able to jump between commits to revert changes.

Now that you have your workspace set up, what do you want to try using Git for?

Programming

